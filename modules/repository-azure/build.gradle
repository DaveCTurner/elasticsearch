import org.apache.tools.ant.filters.ReplaceTokens
import org.elasticsearch.gradle.internal.test.InternalClusterTestPlugin

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  description 'The Azure Repository plugin adds support for Azure storage repositories.'
  classname 'org.elasticsearch.repositories.azure.AzureRepositoryPlugin'
}

// netty-buffer-4.1.110.Final.jar
// netty-codec-4.1.110.Final.jar
// netty-codec-dns-4.1.109.Final.jar
// netty-codec-http-4.1.110.Final.jar
// netty-codec-http2-4.1.110.Final.jar
// netty-codec-socks-4.1.110.Final.jar
// netty-common-4.1.110.Final.jar
// netty-handler-4.1.110.Final.jar
// netty-handler-proxy-4.1.110.Final.jar
// netty-resolver-4.1.110.Final.jar
// netty-resolver-dns-4.1.109.Final.jar
// netty-resolver-dns-classes-macos-4.1.109.Final.jar
// netty-resolver-dns-native-macos-4.1.109.Final-osx-x86_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final-linux-aarch_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final-linux-x86_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final-osx-aarch_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final-osx-x86_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final-windows-x86_64.jar
// netty-tcnative-boringssl-static-2.0.65.Final.jar
// netty-tcnative-classes-2.0.65.Final.jar
// netty-transport-4.1.110.Final.jar
// netty-transport-classes-epoll-4.1.110.Final.jar
// netty-transport-classes-kqueue-4.1.110.Final.jar
// netty-transport-native-epoll-4.1.110.Final-linux-x86_64.jar
// netty-transport-native-kqueue-4.1.110.Final-osx-x86_64.jar
// netty-transport-native-unix-common-4.1.110.Final.jar

// accessors-smart-2.5.0.jar
// asm-9.3.jar
// content-type-2.3.jar
// jackson-annotations-2.13.5.jar
// jackson-core-2.13.5.jar
// jackson-databind-2.13.5.jar
// jackson-dataformat-xml-2.13.5.jar
// jackson-datatype-jsr310-2.13.5.jar
// jcip-annotations-1.0-1.jar
// jna-5.13.0.jar
// jna-platform-5.6.0.jar
// json-smart-2.5.0.jar
// lang-tag-1.7.jar
// nimbus-jose-jwt-9.37.3.jar
// oauth2-oidc-sdk-11.9.1.jar
// reactive-streams-1.0.4.jar
// reactor-core-3.4.38.jar
// reactor-netty-core-1.0.45.jar
// reactor-netty-http-1.0.45.jar
// slf4j-api-1.7.36.jar
// stax2-api-4.2.1.jar
// woodstox-core-6.4.0.jar

// azure-core-1.49.1.jar
// azure-core-http-netty-1.15.1.jar
// azure-identity-1.13.0.jar
// azure-json-1.1.0.jar
// azure-storage-blob-12.26.1.jar
// azure-storage-common-12.25.1.jar
// azure-storage-internal-avro-12.11.1.jar
// azure-xml-1.0.0.jar
// msal4j-1.15.1.jar
// msal4j-persistence-extension-1.3.0.jar

versions << [
  'azureJackson': '2.15.0', // Maven says 2.13.5
  'azureNetty': '4.1.109.Final', // Maven says 4.1.110.Final
  'azureReactorNetty': '1.0.45',
]

dependencies {
  api "com.azure:azure-storage-blob:12.26.1"
  api "com.azure:azure-storage-common:12.26.0" // Maven says 12.25.1
  api "com.azure:azure-core-http-netty:1.15.1"
  api "com.azure:azure-core:1.49.1"
  api "com.azure:azure-identity:1.13.1"
  api "com.azure:azure-json:1.1.0"
  api "com.azure:azure-xml:1.0.0"
  api "com.microsoft.azure:msal4j:1.15.1"
  api "com.microsoft.azure:msal4j-persistence-extension:1.3.0"
  api "net.java.dev.jna:jna-platform:${versions.jna}" // Maven says 5.14.0
  api "net.java.dev.jna:jna:${versions.jna}" // Maven says 5.14.0
  api "net.minidev:accessors-smart:2.5.0"
  api "net.minidev:json-smart:2.5.0"
  api "org.ow2.asm:asm:9.3"
  api "com.nimbusds:content-type:2.3"
  api "com.nimbusds:lang-tag:1.7"
  api "com.nimbusds:nimbus-jose-jwt:9.37.3"
  api "com.nimbusds:oauth2-oidc-sdk:11.9.1"
  api "com.github.stephenc.jcip:jcip-annotations:1.0-1"
  api "com.fasterxml.woodstox:woodstox-core:6.4.0"
  api "org.codehaus.woodstox:stax2-api:4.2.1"
  api "com.azure:azure-storage-internal-avro:12.11.1"

  // jackson
  api "com.fasterxml.jackson.core:jackson-core:${versions.azureJackson}"
  api "com.fasterxml.jackson.core:jackson-databind:${versions.azureJackson}"
  api "com.fasterxml.jackson.core:jackson-annotations:${versions.azureJackson}"
  api "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${versions.azureJackson}"
  api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.azureJackson}"
  api "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${versions.azureJackson}"

  // netty
  api "io.netty:netty-common:${versions.azureNetty}"
  api "io.netty:netty-buffer:${versions.azureNetty}"
  api "io.netty:netty-handler:${versions.azureNetty}"
  api "io.netty:netty-codec:${versions.azureNetty}"
  api "io.netty:netty-codec-dns:${versions.azureNetty}"
  api "io.netty:netty-codec-http:${versions.azureNetty}"
  api "io.netty:netty-codec-http2:${versions.azureNetty}"
  api "io.netty:netty-codec-socks:${versions.azureNetty}"
  api "io.netty:netty-handler-proxy:${versions.azureNetty}"
  api "io.netty:netty-resolver-dns:${versions.azureNetty}"

  // reactor
  api "io.projectreactor.netty:reactor-netty-core:${versions.azureReactorNetty}"
  api "io.projectreactor.netty:reactor-netty-http:${versions.azureReactorNetty}"
  api "io.projectreactor:reactor-core:3.4.38"
  api "org.reactivestreams:reactive-streams:1.0.4"

  implementation project(":modules:transport-netty4")
  runtimeOnly("org.apache.logging.log4j:log4j-slf4j2-impl:${versions.log4j}") // https://github.com/elastic/elasticsearch/issues/93714
  implementation("org.slf4j:slf4j-api:${versions.slf4j}")
//  runtimeOnly "org.slf4j:slf4j-nop:${versions.slf4j}"

  testImplementation project(':test:fixtures:azure-fixture')
  yamlRestTestImplementation project(':test:fixtures:azure-fixture')
}

restResources {
  restApi {
    include '_common', 'cluster', 'nodes', 'snapshot', 'bulk', 'count', 'indices'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /azure-.*/, to: 'azure'
  mapping from: /jackson-.*/, to: 'jackson'
  mapping from: /netty-.*/, to: 'netty'
  mapping from: /jaxb-.*/, to: 'jaxb'
  mapping from: /stax-.*/, to: 'stax'
  mapping from: /reactor-netty-.*/, to: 'reactor-netty'
  mapping from: /reactive-streams.*/, to: 'reactive-streams'
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    // from reactory-netty metric collection
    'io.micrometer.core.instrument.Clock',
    'io.micrometer.core.instrument.Counter',
    'io.micrometer.core.instrument.Counter$Builder',
    'io.micrometer.core.instrument.DistributionSummary',
    'io.micrometer.core.instrument.DistributionSummary$Builder',
    'io.micrometer.core.instrument.Meter',
    'io.micrometer.core.instrument.Meter$Type',
    'io.micrometer.core.instrument.MeterRegistry',
    'io.micrometer.core.instrument.Metrics',
    'io.micrometer.core.instrument.Tag',
    'io.micrometer.core.instrument.Tags',
    'io.micrometer.core.instrument.Timer',
    'io.micrometer.core.instrument.Timer$Builder',
    'io.micrometer.core.instrument.Timer$Sample',
    'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics',
    'io.micrometer.core.instrument.composite.CompositeMeterRegistry',
    'io.micrometer.core.instrument.search.Search',
    'io.micrometer.core.instrument.Gauge',
    'io.micrometer.core.instrument.Gauge$Builder',
    'io.micrometer.context.ContextAccessor',

    // from reactor-core kotlin extensions (to be deprecated from the library at some point on 3.3.x release)
    'kotlin.collections.ArraysKt',
    'kotlin.jvm.JvmClassMappingKt',
    'kotlin.jvm.functions.Function0',
    'kotlin.jvm.functions.Function1',
    'kotlin.jvm.internal.FunctionReference',
    'kotlin.jvm.internal.Intrinsics',
    'kotlin.jvm.internal.Reflection',
    'kotlin.jvm.internal.markers.KMappedMarker',
    'kotlin.reflect.KClass',
    'kotlin.reflect.KDeclarationContainer',
    'kotlin.sequences.Sequence',

    // from io.netty.util.internal.Hidden (netty-common optional dependency)
    'reactor.blockhound.BlockHound$Builder',
    'reactor.blockhound.integration.BlockHoundIntegration',

    // it uses NIO
    'io.netty.channel.kqueue.KQueue',
    'io.netty.channel.kqueue.KQueueDatagramChannel',
    'io.netty.channel.kqueue.KQueueServerSocketChannel',
    'io.netty.channel.kqueue.KQueueSocketChannel',

    'io.netty.channel.epoll.Epoll',
    'io.netty.channel.epoll.EpollDatagramChannel',
    'io.netty.channel.epoll.EpollServerSocketChannel',
    'io.netty.channel.epoll.EpollSocketChannel',

    'io.netty.incubator.channel.uring.IOUring',
    'io.netty.incubator.channel.uring.IOUringDatagramChannel',
    'io.netty.incubator.channel.uring.IOUringServerSocketChannel',
    'io.netty.incubator.channel.uring.IOUringSocketChannel',

    // from reactor.netty.http.server.HttpServer (reactor-netty)
    'io.netty.handler.codec.haproxy.HAProxyMessage',
    'io.netty.handler.codec.haproxy.HAProxyMessageDecoder',

    // from com.ctc.wstx.osgi.WstxBundleActivator (woodstox-core)
    'org.osgi.framework.BundleActivator',
    'org.osgi.framework.BundleContext',

    // from com.ctc.wstx.shaded.msv_core.driver.textui.Driver (woodstox-core)
    'com.ctc.wstx.shaded.msv_core.driver.textui.Driver',
    // [missing classes] SLF4j includes an optional class that depends on an extension class. see Log4jLogger#createConverter
    'org.slf4j.ext.EventData', // - bring back when https://github.com/elastic/elasticsearch/issues/93714 is done

    // tbd
    'com.azure.storage.common.implementation.StorageSeekableByteChannel$ReadBehavior',
    'com.azure.storage.common.implementation.StorageSeekableByteChannel$WriteBehavior',
    'com.google.crypto.tink.subtle.Ed25519Sign',
    'com.google.crypto.tink.subtle.Ed25519Sign$KeyPair',
    'com.google.crypto.tink.subtle.Ed25519Verify',
    'com.google.crypto.tink.subtle.X25519',
    'com.google.crypto.tink.subtle.XChaCha20Poly1305',
    'jakarta.servlet.ServletRequest',
    'jakarta.servlet.http.HttpServletRequest',
    'jakarta.servlet.http.HttpServletResponse',
    'javax.servlet.ServletRequest',
    'javax.servlet.http.HttpServletRequest',
    'javax.servlet.http.HttpServletResponse',
    'net.shibboleth.utilities.java.support.xml.SerializeSupport',
    'org.bouncycastle.asn1.pkcs.PrivateKeyInfo',
    'org.bouncycastle.asn1.x509.AlgorithmIdentifier',
    'org.bouncycastle.asn1.x509.SubjectPublicKeyInfo',
    'org.bouncycastle.cert.X509CertificateHolder',
    'org.bouncycastle.cert.jcajce.JcaX509CertificateHolder',
    'org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder',
    'org.bouncycastle.crypto.InvalidCipherTextException',
    'org.bouncycastle.crypto.engines.AESEngine',
    'org.bouncycastle.crypto.modes.GCMBlockCipher',
    'org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider',
    'org.bouncycastle.jce.provider.BouncyCastleProvider',
    'org.bouncycastle.openssl.PEMKeyPair',
    'org.bouncycastle.openssl.PEMParser',
    'org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter',
    'org.bouncycastle.operator.jcajce.JcaContentSignerBuilder',
    'org.cryptomator.siv.SivMode',
    'org.joda.time.DateTime',
    'org.opensaml.core.config.InitializationException',
    'org.opensaml.core.config.InitializationService',
    'org.opensaml.core.xml.XMLObject',
    'org.opensaml.core.xml.XMLObjectBuilder',
    'org.opensaml.core.xml.XMLObjectBuilderFactory',
    'org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport',
    'org.opensaml.core.xml.io.Marshaller',
    'org.opensaml.core.xml.io.MarshallerFactory',
    'org.opensaml.core.xml.io.MarshallingException',
    'org.opensaml.core.xml.io.Unmarshaller',
    'org.opensaml.core.xml.io.UnmarshallerFactory',
    'org.opensaml.core.xml.schema.XSString',
    'org.opensaml.core.xml.schema.impl.XSStringBuilder',
    'org.opensaml.saml.saml2.core.Assertion',
    'org.opensaml.saml.saml2.core.Attribute',
    'org.opensaml.saml.saml2.core.AttributeStatement',
    'org.opensaml.saml.saml2.core.AttributeValue',
    'org.opensaml.saml.saml2.core.Audience',
    'org.opensaml.saml.saml2.core.AudienceRestriction',
    'org.opensaml.saml.saml2.core.AuthnContext',
    'org.opensaml.saml.saml2.core.AuthnContextClassRef',
    'org.opensaml.saml.saml2.core.AuthnStatement',
    'org.opensaml.saml.saml2.core.Conditions',
    'org.opensaml.saml.saml2.core.Issuer',
    'org.opensaml.saml.saml2.core.NameID',
    'org.opensaml.saml.saml2.core.Subject',
    'org.opensaml.saml.saml2.core.SubjectConfirmation',
    'org.opensaml.saml.saml2.core.SubjectConfirmationData',
    'org.opensaml.saml.security.impl.SAMLSignatureProfileValidator',
    'org.opensaml.security.credential.BasicCredential',
    'org.opensaml.security.credential.Credential',
    'org.opensaml.security.credential.UsageType',
    'org.opensaml.xmlsec.signature.Signature',
    'org.opensaml.xmlsec.signature.support.SignatureException',
    'org.opensaml.xmlsec.signature.support.SignatureValidator',
    'org.opensaml.xmlsec.signature.support.Signer',
  )

  ignoreViolations(
    'javax.activation.MailcapCommandMap',
    'javax.activation.MimetypesFileTypeMap',
    'reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory$TracingException',
  )
}

boolean useFixture = false
String azureAccount = System.getenv("azure_storage_account")
String azureKey = System.getenv("azure_storage_key")
String azureContainer = System.getenv("azure_storage_container")
String azureBasePath = System.getenv("azure_storage_base_path")
String azureSasToken = System.getenv("azure_storage_sas_token")

if (!azureAccount && !azureKey && !azureContainer && !azureBasePath && !azureSasToken) {
  azureAccount = 'azure_integration_test_account'
  azureKey = 'YXp1cmVfaW50ZWdyYXRpb25fdGVzdF9rZXk=' // The key is "azure_integration_test_key" encoded using base64
  azureContainer = 'container'
  azureBasePath = ''
  azureSasToken = ''
  useFixture = true
}

Map<String, String> expansions = [
  'container': azureContainer,
  'base_path': azureBasePath + "_integration_tests"
]

tasks.named("processYamlRestTestResources") {
  inputs.properties(expansions)
  filter("tokens" : expansions, ReplaceTokens.class)
}

tasks.named("internalClusterTest") {
  // this is tested explicitly in a separate test task
  exclude '**/AzureStorageCleanupThirdPartyTests.class'
}

tasks.named("yamlRestTest") {
  systemProperty 'test.azure.fixture', Boolean.toString(useFixture)
  systemProperty 'test.azure.account', azureAccount
  systemProperty 'test.azure.container', azureContainer
  systemProperty 'test.azure.key', azureKey
  systemProperty 'test.azure.sas_token', azureSasToken
}

tasks.register("azureThirdPartyUnitTest", Test) {
  SourceSetContainer sourceSets = project.getExtensions().getByType(SourceSetContainer.class);
  SourceSet internalTestSourceSet = sourceSets.getByName(InternalClusterTestPlugin.SOURCE_SET_NAME)
  setTestClassesDirs(internalTestSourceSet.getOutput().getClassesDirs())
  setClasspath(internalTestSourceSet.getRuntimeClasspath())
  include '**/AzureStorageCleanupThirdPartyTests.class'
  systemProperty 'test.azure.fixture', Boolean.toString(useFixture)
  systemProperty 'test.azure.account', azureAccount ?: ""
  systemProperty 'test.azure.key', azureKey ?: ""
  systemProperty 'test.azure.sas_token', azureSasToken ?: ""
  systemProperty 'test.azure.container', azureContainer ?: ""
  systemProperty 'test.azure.base', (azureBasePath ?: "") + "_third_party_tests_"
}

tasks.register('azureThirdPartyTest') {
  dependsOn 'azureThirdPartyUnitTest', 'yamlRestTest'
}

tasks.named("check") {
  dependsOn("azureThirdPartyUnitTest")
}
